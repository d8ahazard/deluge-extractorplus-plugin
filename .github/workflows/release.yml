name: Build and Release

on:
  # Manually trigger the workflow
  workflow_dispatch:
    inputs:
      pre_release:
        description: 'Pre-release'
        type: boolean
        default: false

# Set permissions to allow creating releases and committing changes
permissions:
  contents: write
  packages: read

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: main  # Get the updated version from the main branch
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel
      
      - name: Extract version from setup.py
        id: get_version
        run: |
          VERSION=$(grep -E "^__version__ = '([^']+)'" setup.py | cut -d"'" -f2)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Extracted version: $VERSION"
      
      - name: Build egg
        run: |
          python setup.py bdist_egg
          
          # Get the Python version in short format (e.g., 3.10 -> py3.10)
          PY_SHORT=$(echo ${{ matrix.python-version }} | sed 's/^/py/')
          
          # Rename the egg file to the correct format
          # First find the egg file
          EGG_FILE=$(find dist -name "*.egg" -type f)
          
          # Check if egg file was found
          if [ -n "$EGG_FILE" ]; then
            # Create the proper filename
            NEW_NAME="dist/ExtractorPlus-${VERSION}-${PY_SHORT}.egg"
            
            # Rename the file
            mv "$EGG_FILE" "$NEW_NAME"
            echo "Renamed egg file to $NEW_NAME"
          else
            echo "No egg file found in dist directory"
            exit 1
          fi
      
      - name: Upload egg artifact
        uses: actions/upload-artifact@v4
        with:
          name: ExtractorPlus-${{ env.VERSION }}-py${{ matrix.python-version }}
          path: dist/ExtractorPlus-${{ env.VERSION }}-py${{ matrix.python-version }}.egg
          
      # Save version for use in the create-release job
      - name: Save version to artifact
        if: matrix.python-version == '3.9'  # Only need to save once
        run: |
          echo "${{ env.VERSION }}" > version.txt
      
      - name: Upload version artifact
        if: matrix.python-version == '3.9'  # Only need to upload once
        uses: actions/upload-artifact@v4
        with:
          name: version
          path: version.txt
  
  create-release:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: main  # Get the updated version
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      
      # Get the version from the artifact
      - name: Get version
        run: |
          VERSION=$(cat artifacts/version/version.txt)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Using version: $VERSION"
      
      - name: Move eggs to single directory
        run: |
          mkdir -p release-assets
          find artifacts -name "*.egg" -exec cp {} release-assets/ \;
          ls -la release-assets/
      
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.VERSION }}
          name: ExtractorPlus v${{ env.VERSION }}
          body: |
            # ExtractorPlus v${{ env.VERSION }}
            
            ## Changes
            <!-- Add your changes here -->
            
            ## Installation
            Download the egg file that matches your Python version:
            - For Windows: ExtractorPlus-${{ env.VERSION }}-py3.9.egg
            - For Linux: Choose the egg that matches your Python version
            
            See README.md for full installation instructions.
          files: release-assets/*.egg
          draft: true
          prerelease: ${{ github.event.inputs.pre_release }} 